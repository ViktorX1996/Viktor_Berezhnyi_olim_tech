{"ast":null,"code":"import { postAPI } from \"../api/api\";\nconst SET_TEST = 'SET_TEST';\nconst SET_DATA = 'SET_DATA';\nconst defaultState = {\n  currentUser: 'Guest',\n  searchStr: '',\n  pagination: {\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1\n  },\n  cardData: [{\n    id: 1,\n    title: 'MyDream',\n    author: 'Jeremy',\n    voteNumber: 10,\n    timeStamp: new Date(),\n    image: '/todo/',\n    isOpen: false,\n    comments: [{\n      text: 'Spasibo',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }, {\n      text: 'Spasibo',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }, {\n      text: 'Spasibo',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }]\n  }, {\n    title: 'Tetris',\n    author: 'Galya',\n    voteNumber: 15,\n    timeStamp: new Date(),\n    image: '/todo/',\n    isOpen: false,\n    comments: [{\n      text: 'Ura, Thank You',\n      voteNumber: 5,\n      timeStamp: new Date()\n    }, {\n      text: 'Please write me on email mbutuzov@gmail.com',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }, {\n      text: 'I am too',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }]\n  }]\n};\n\nconst storeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DATA:\n      return {};\n\n    case SET_TEST:\n      return { ...state,\n        currentUser: action.payload\n      };\n\n    default:\n      return defaultState;\n  }\n};\n\nexport const setTestAC = payload => ({\n  type: SET_DATA,\n  payload\n});\nexport const getPostsByPages = page => {\n  return dispatch => {\n    // dispatch(toggleIsFetching(true));\n    postAPI.getPostsByPages(page).then(data => {\n      // dispatch(toggleIsFetching(false));\n      // dispatch(setUsers(data.items));\n      // dispatch(setTotalUsersCount(data.totalCount));\n      console.log(data);\n      console.log('getUsers DONE');\n    });\n  };\n};\nexport default storeReducer;","map":{"version":3,"sources":["C:/diskDlyaHlama/olim_tech_practice/testTuskRedux/react-practical-assignment-main/client/src/Redux/storeReducer.js"],"names":["postAPI","SET_TEST","SET_DATA","defaultState","currentUser","searchStr","pagination","pageSize","totalUsersCount","currentPage","cardData","id","title","author","voteNumber","timeStamp","Date","image","isOpen","comments","text","storeReducer","state","action","type","payload","setTestAC","getPostsByPages","page","dispatch","then","data","console","log"],"mappings":"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","sourcesContent":["import {postAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_TEST = 'SET_TEST'\r\nconst SET_DATA = 'SET_DATA'\r\n\r\nconst defaultState = {\r\n    currentUser: 'Guest',\r\n    searchStr: '',\r\n    pagination: {\r\n        pageSize: 5,\r\n        totalUsersCount: 0,\r\n        currentPage: 1\r\n    },\r\n    cardData: [\r\n        {\r\n            id: 1,\r\n            title: 'MyDream',\r\n            author: 'Jeremy',\r\n            voteNumber: 10,\r\n            timeStamp: new Date(),\r\n            image: '/todo/',\r\n            isOpen:false,\r\n            comments: [\r\n                {\r\n                    text: 'Spasibo',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                },\r\n                {\r\n                    text: 'Spasibo',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                },\r\n                {\r\n                    text: 'Spasibo',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            title: 'Tetris',\r\n            author: 'Galya',\r\n            voteNumber: 15,\r\n            timeStamp: new Date(),\r\n            image: '/todo/',\r\n            isOpen: false,\r\n            comments: [\r\n                {\r\n                    text: 'Ura, Thank You',\r\n                    voteNumber: 5,\r\n                    timeStamp: new Date()\r\n                },\r\n                {\r\n                    text: 'Please write me on email mbutuzov@gmail.com',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                },\r\n                {\r\n                    text: 'I am too',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n\r\n}\r\n\r\n\r\nconst storeReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_DATA:\r\n            return {\r\n\r\n            }\r\n        case SET_TEST:\r\n            return {...state, currentUser: action.payload}\r\n\r\n        default:\r\n            return defaultState\r\n    }\r\n}\r\n\r\n\r\nexport const setTestAC = (payload) => ({type: SET_DATA, payload})\r\n\r\nexport const getPostsByPages = (page) => {\r\n    return (dispatch) =>{\r\n        // dispatch(toggleIsFetching(true));\r\n        postAPI.getPostsByPages(page).then(\r\n            data => {\r\n                // dispatch(toggleIsFetching(false));\r\n                // dispatch(setUsers(data.items));\r\n                // dispatch(setTotalUsersCount(data.totalCount));\r\n                console.log(data)\r\n                console.log('getUsers DONE');\r\n            }\r\n        );\r\n\r\n    }}\r\n\r\n\r\n\r\n\r\nexport default storeReducer;"]},"metadata":{},"sourceType":"module"}