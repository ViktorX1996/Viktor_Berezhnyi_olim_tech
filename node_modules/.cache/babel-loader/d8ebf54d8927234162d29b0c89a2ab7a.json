{"ast":null,"code":"import { postAPI } from \"../api/api\";\nconst SET_TEST = 'SET_TEST';\nconst SET_DATA = 'SET_DATA';\nconst SET_POSTS_BY_PAGES = 'SET_POSTS_BY_PAGES';\nconst defaultState = {\n  currentUser: 'Guest',\n  searchStr: '',\n  pagination: {\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1\n  },\n  cardData: [{\n    id: 1,\n    title: 'MyDream',\n    username: 'Jeremy',\n    likes: [],\n    dislikes: [],\n    timeStamp: new Date(),\n    image: 'empty',\n    isOpen: false,\n    comments: [{\n      text: 'Spasibo',\n      postId: 1,\n      id: 1,\n      username: 'Aboba',\n      dislikes: [],\n      likes: [],\n      timeStamp: new Date()\n    }]\n  }]\n};\n\nconst storeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DATA:\n      return {};\n\n    case SET_TEST:\n      return { ...state,\n        currentUser: action.payload\n      };\n\n    case SET_POSTS_BY_PAGES:\n      return { ...state,\n        cardData: action.payload\n      };\n\n    default:\n      return defaultState;\n  }\n};\n\nexport const setPostsByPages = payload => ({\n  type: SET_POSTS_BY_PAGES,\n  payload\n});\nexport const getPostsByPages = page => {\n  return dispatch => {\n    // dispatch(toggleIsFetching(true));\n    let cardDataBuffer;\n    postAPI.getPostsByPages(page).then(data => {\n      // dispatch(toggleIsFetching(false));\n      // dispatch(setUsers(data.items));\n      // dispatch(setTotalUsersCount(data.totalCount));\n      console.log(data);\n      cardDataBuffer = data.result;\n      cardDataBuffer['timeStamp'] = cardDataBuffer['date'];\n      delete cardDataBuffer['date'];\n      dispatch(setPostsByPages(cardDataBuffer));\n    });\n  };\n};\nexport default storeReducer;","map":{"version":3,"sources":["C:/diskDlyaHlama/olim_tech_practice/testTuskRedux/react-practical-assignment-main/client/src/Redux/storeReducer.js"],"names":["postAPI","SET_TEST","SET_DATA","SET_POSTS_BY_PAGES","defaultState","currentUser","searchStr","pagination","pageSize","totalUsersCount","currentPage","cardData","id","title","username","likes","dislikes","timeStamp","Date","image","isOpen","comments","text","postId","storeReducer","state","action","type","payload","setPostsByPages","getPostsByPages","page","dispatch","cardDataBuffer","then","data","console","log","result"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAGA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,OADI;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,CADF;AAERC,IAAAA,eAAe,EAAE,CAFT;AAGRC,IAAAA,WAAW,EAAE;AAHL,GAHK;AAQjBC,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,KAAK,EAAE,SAFX;AAGIC,IAAAA,QAAQ,EAAE,QAHd;AAIIC,IAAAA,KAAK,EAAE,EAJX;AAKIC,IAAAA,QAAQ,EAAE,EALd;AAMIC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EANf;AAOIC,IAAAA,KAAK,EAAE,OAPX;AAQIC,IAAAA,MAAM,EAAC,KARX;AASIC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,IAAI,EAAE,SADV;AAEIC,MAAAA,MAAM,EAAE,CAFZ;AAGIX,MAAAA,EAAE,EAAE,CAHR;AAIIE,MAAAA,QAAQ,EAAE,OAJd;AAKIE,MAAAA,QAAQ,EAAE,EALd;AAMID,MAAAA,KAAK,EAAE,EANX;AAOIE,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAPf,KADM;AATd,GADM;AARO,CAArB;;AAoCA,MAAMM,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBrB,YAAyB;AAAA,MAAXsB,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKzB,QAAL;AACI,aAAO,EAAP;;AAGJ,SAAKD,QAAL;AACI,aAAO,EAAC,GAAGwB,KAAJ;AAAWpB,QAAAA,WAAW,EAAEqB,MAAM,CAACE;AAA/B,OAAP;;AAEJ,SAAKzB,kBAAL;AACI,aAAO,EAAC,GAAGsB,KAAJ;AAAWd,QAAAA,QAAQ,EAAEe,MAAM,CAACE;AAA5B,OAAP;;AAEJ;AACI,aAAOxB,YAAP;AAZR;AAcH,CAfD;;AAkBA,OAAO,MAAMyB,eAAe,GAAID,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAExB,kBAAP;AAA2ByB,EAAAA;AAA3B,CAAd,CAAxB;AAGP,OAAO,MAAME,eAAe,GAAIC,IAAD,IAAU;AACrC,SAAQC,QAAD,IAAa;AAChB;AACA,QAAIC,cAAJ;AACAjC,IAAAA,OAAO,CAAC8B,eAAR,CAAwBC,IAAxB,EAA8BG,IAA9B,CACIC,IAAI,IAAI;AACJ;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,MAAAA,cAAc,GAAGE,IAAI,CAACG,MAAtB;AACAL,MAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BA,cAAc,CAAC,MAAD,CAA5C;AACA,aAAOA,cAAc,CAAC,MAAD,CAArB;AAEAD,MAAAA,QAAQ,CAACH,eAAe,CAACI,cAAD,CAAhB,CAAR;AACH,KAXL;AAcH,GAjBD;AAiBE,CAlBC;AAuBP,eAAeT,YAAf","sourcesContent":["import {postAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_TEST = 'SET_TEST'\r\nconst SET_DATA = 'SET_DATA'\r\nconst SET_POSTS_BY_PAGES = 'SET_POSTS_BY_PAGES';\r\n\r\nconst defaultState = {\r\n    currentUser: 'Guest',\r\n    searchStr: '',\r\n    pagination: {\r\n        pageSize: 5,\r\n        totalUsersCount: 0,\r\n        currentPage: 1\r\n    },\r\n    cardData: [\r\n        {\r\n            id: 1,\r\n            title: 'MyDream',\r\n            username: 'Jeremy',\r\n            likes: [],\r\n            dislikes: [],\r\n            timeStamp: new Date(),\r\n            image: 'empty',\r\n            isOpen:false,\r\n            comments: [\r\n                {\r\n                    text: 'Spasibo',\r\n                    postId: 1,\r\n                    id: 1,\r\n                    username: 'Aboba',\r\n                    dislikes: [],\r\n                    likes: [],\r\n                    timeStamp: new Date()\r\n                }\r\n            ]\r\n        }\r\n            \r\n    ]\r\n\r\n}\r\n\r\n\r\nconst storeReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_DATA:\r\n            return {\r\n\r\n            }\r\n        case SET_TEST:\r\n            return {...state, currentUser: action.payload}\r\n\r\n        case SET_POSTS_BY_PAGES:\r\n            return {...state, cardData: action.payload}\r\n\r\n        default:\r\n            return defaultState\r\n    }\r\n}\r\n\r\n\r\nexport const setPostsByPages = (payload) => ({type: SET_POSTS_BY_PAGES, payload})\r\n\r\n\r\nexport const getPostsByPages = (page) => {\r\n    return (dispatch) =>{\r\n        // dispatch(toggleIsFetching(true));\r\n        let cardDataBuffer;\r\n        postAPI.getPostsByPages(page).then(\r\n            data => {\r\n                // dispatch(toggleIsFetching(false));\r\n                // dispatch(setUsers(data.items));\r\n                // dispatch(setTotalUsersCount(data.totalCount));\r\n                console.log(data)\r\n                cardDataBuffer = data.result;\r\n                cardDataBuffer['timeStamp'] = cardDataBuffer['date']\r\n                delete cardDataBuffer['date'];\r\n                \r\n                dispatch(setPostsByPages(cardDataBuffer))\r\n            }\r\n        );\r\n\r\n    }}\r\n\r\n\r\n\r\n\r\nexport default storeReducer;"]},"metadata":{},"sourceType":"module"}