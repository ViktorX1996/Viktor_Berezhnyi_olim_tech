{"ast":null,"code":"const SET_TEST = 'SET_TEST';\nconst SET_POST = 'SET_POST';\nconst defaultState = {\n  currentUser: 'Guest',\n  searchStr: '',\n  pagination: {\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1\n  },\n  cardData: [{\n    title: 'MyDream',\n    author: 'Jeremy',\n    voteNumber: 10,\n    timeStamp: new Date(),\n    image: '/todo/',\n    isOpen: false,\n    comments: [{\n      text: 'Spasibo',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }, {\n      text: 'Spasibo',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }, {\n      text: 'Spasibo',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }]\n  }, {\n    title: 'Tetris',\n    author: 'Galya',\n    voteNumber: 15,\n    timeStamp: new Date(),\n    image: '/todo/',\n    isOpen: false,\n    comments: [{\n      text: 'Ura, Thank You',\n      voteNumber: 5,\n      timeStamp: new Date()\n    }, {\n      text: 'Please write me on email mbutuzov@gmail.com',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }, {\n      text: 'I am too',\n      voteNumber: 4,\n      timeStamp: new Date()\n    }]\n  }]\n};\n\nconst storeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_POST:\n      return {};\n\n    case SET_TEST:\n      return { ...state,\n        currentUser: action.payload\n      };\n\n    default:\n      return defaultState;\n  }\n}; //Standart Action Creators\n\n\nexport const setTestAC = payload => ({\n  type: SET_TEST,\n  payload\n});\nexport default storeReducer;","map":{"version":3,"sources":["C:/diskDlyaHlama/olim_tech_practice/testTuskRedux/react-practical-assignment-main/client/src/Redux/storeReducer.js"],"names":["SET_TEST","SET_POST","defaultState","currentUser","searchStr","pagination","pageSize","totalUsersCount","currentPage","cardData","title","author","voteNumber","timeStamp","Date","image","isOpen","comments","text","storeReducer","state","action","type","payload","setTestAC"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,OADI;AAEjBC,EAAAA,SAAS,EAAE,EAFM;AAGjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,CADF;AAERC,IAAAA,eAAe,EAAE,CAFT;AAGRC,IAAAA,WAAW,EAAE;AAHL,GAHK;AAQjBC,EAAAA,QAAQ,EAAE,CACN;AACIC,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,MAAM,EAAE,QAFZ;AAGIC,IAAAA,UAAU,EAAE,EAHhB;AAIIC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJf;AAKIC,IAAAA,KAAK,EAAE,QALX;AAMIC,IAAAA,MAAM,EAAC,KANX;AAOIC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,IAAI,EAAE,SADV;AAEIN,MAAAA,UAAU,EAAE,CAFhB;AAGIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAHf,KADM,EAMN;AACII,MAAAA,IAAI,EAAE,SADV;AAEIN,MAAAA,UAAU,EAAE,CAFhB;AAGIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAHf,KANM,EAWN;AACII,MAAAA,IAAI,EAAE,SADV;AAEIN,MAAAA,UAAU,EAAE,CAFhB;AAGIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAHf,KAXM;AAPd,GADM,EA0BN;AACIJ,IAAAA,KAAK,EAAE,QADX;AAEIC,IAAAA,MAAM,EAAE,OAFZ;AAGIC,IAAAA,UAAU,EAAE,EAHhB;AAIIC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EAJf;AAKIC,IAAAA,KAAK,EAAE,QALX;AAMIC,IAAAA,MAAM,EAAE,KANZ;AAOIC,IAAAA,QAAQ,EAAE,CACN;AACIC,MAAAA,IAAI,EAAE,gBADV;AAEIN,MAAAA,UAAU,EAAE,CAFhB;AAGIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAHf,KADM,EAMN;AACII,MAAAA,IAAI,EAAE,6CADV;AAEIN,MAAAA,UAAU,EAAE,CAFhB;AAGIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAHf,KANM,EAWN;AACII,MAAAA,IAAI,EAAE,UADV;AAEIN,MAAAA,UAAU,EAAE,CAFhB;AAGIC,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AAHf,KAXM;AAPd,GA1BM;AARO,CAArB;;AAgEA,MAAMK,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBlB,YAAyB;AAAA,MAAXmB,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKrB,QAAL;AACI,aAAO,EAAP;;AACJ,SAAKD,QAAL;AACI,aAAO,EAAC,GAAGoB,KAAJ;AAAWjB,QAAAA,WAAW,EAAEkB,MAAM,CAACE;AAA/B,OAAP;;AAEJ;AACI,aAAOrB,YAAP;AAPR;AASH,CAVD,C,CAaA;;;AACA,OAAO,MAAMsB,SAAS,GAAID,OAAD,KAAc;AAACD,EAAAA,IAAI,EAAEtB,QAAP;AAAiBuB,EAAAA;AAAjB,CAAd,CAAlB;AAEP,eAAeJ,YAAf","sourcesContent":["const SET_TEST = 'SET_TEST'\r\nconst SET_POST = 'SET_POST'\r\n\r\nconst defaultState = {\r\n    currentUser: 'Guest',\r\n    searchStr: '',\r\n    pagination: {\r\n        pageSize: 5,\r\n        totalUsersCount: 0,\r\n        currentPage: 1\r\n    },\r\n    cardData: [\r\n        {\r\n            title: 'MyDream',\r\n            author: 'Jeremy',\r\n            voteNumber: 10,\r\n            timeStamp: new Date(),\r\n            image: '/todo/',\r\n            isOpen:false,\r\n            comments: [\r\n                {\r\n                    text: 'Spasibo',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                },\r\n                {\r\n                    text: 'Spasibo',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                },\r\n                {\r\n                    text: 'Spasibo',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            title: 'Tetris',\r\n            author: 'Galya',\r\n            voteNumber: 15,\r\n            timeStamp: new Date(),\r\n            image: '/todo/',\r\n            isOpen: false,\r\n            comments: [\r\n                {\r\n                    text: 'Ura, Thank You',\r\n                    voteNumber: 5,\r\n                    timeStamp: new Date()\r\n                },\r\n                {\r\n                    text: 'Please write me on email mbutuzov@gmail.com',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                },\r\n                {\r\n                    text: 'I am too',\r\n                    voteNumber: 4,\r\n                    timeStamp: new Date()\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n\r\n}\r\n\r\n\r\nconst storeReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_POST:\r\n            return {}\r\n        case SET_TEST:\r\n            return {...state, currentUser: action.payload}\r\n\r\n        default:\r\n            return defaultState\r\n    }\r\n}\r\n\r\n\r\n//Standart Action Creators\r\nexport const setTestAC = (payload) => ({type: SET_TEST, payload})\r\n\r\nexport default storeReducer;"]},"metadata":{},"sourceType":"module"}