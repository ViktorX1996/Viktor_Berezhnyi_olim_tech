{"ast":null,"code":"import { postAPI } from \"../api/api\";\nconst SET_TEST = 'SET_TEST';\nconst SET_DATA = 'SET_DATA';\nconst defaultState = {// currentUser: 'Guest',\n  // searchStr: '',\n  // pagination: {\n  //     pageSize: 5,\n  //     totalUsersCount: 0,\n  //     currentPage: 1\n  // },\n  // cardData: [\n  //     {\n  //         title: 'MyDream',\n  //         author: 'Jeremy',\n  //         voteNumber: 10,\n  //         timeStamp: new Date(),\n  //         image: '/todo/',\n  //         isOpen:false,\n  //         comments: [\n  //             {\n  //                 text: 'Spasibo',\n  //                 voteNumber: 4,\n  //                 timeStamp: new Date()\n  //             },\n  //             {\n  //                 text: 'Spasibo',\n  //                 voteNumber: 4,\n  //                 timeStamp: new Date()\n  //             },\n  //             {\n  //                 text: 'Spasibo',\n  //                 voteNumber: 4,\n  //                 timeStamp: new Date()\n  //             }\n  //         ]\n  //     },\n  //     {\n  //         title: 'Tetris',\n  //         author: 'Galya',\n  //         voteNumber: 15,\n  //         timeStamp: new Date(),\n  //         image: '/todo/',\n  //         isOpen: false,\n  //         comments: [\n  //             {\n  //                 text: 'Ura, Thank You',\n  //                 voteNumber: 5,\n  //                 timeStamp: new Date()\n  //             },\n  //             {\n  //                 text: 'Please write me on email mbutuzov@gmail.com',\n  //                 voteNumber: 4,\n  //                 timeStamp: new Date()\n  //             },\n  //             {\n  //                 text: 'I am too',\n  //                 voteNumber: 4,\n  //                 timeStamp: new Date()\n  //             }\n  //         ]\n  //     }\n  // ]\n};\n\nconst storeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DATA:\n      return {};\n\n    case SET_TEST:\n      return { ...state,\n        currentUser: action.payload\n      };\n\n    default:\n      return defaultState;\n  }\n};\n\nexport const setTestAC = payload => ({\n  type: SET_DATA,\n  payload\n});\nexport const getPostsByPages = page => {\n  return dispatch => {\n    // dispatch(toggleIsFetching(true));\n    postAPI.getPostsByPages(page).then(data => {\n      // dispatch(toggleIsFetching(false));\n      // dispatch(setUsers(data.items));\n      // dispatch(setTotalUsersCount(data.totalCount));\n      console.log(data.JSON.stringify(data));\n      console.log('getUsers DONE');\n    });\n  };\n};\nexport default storeReducer;","map":{"version":3,"sources":["C:/diskDlyaHlama/olim_tech_practice/testTuskRedux/react-practical-assignment-main/client/src/Redux/storeReducer.js"],"names":["postAPI","SET_TEST","SET_DATA","defaultState","storeReducer","state","action","type","currentUser","payload","setTestAC","getPostsByPages","page","dispatch","then","data","console","log","JSON","stringify"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,YAAtB;AAGA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,MAAMC,YAAY,GAAG,CACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3DiB,CAArB;;AAgEA,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,QAAL;AACI,aAAO,EAAP;;AAGJ,SAAKD,QAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWG,QAAAA,WAAW,EAAEF,MAAM,CAACG;AAA/B,OAAP;;AAEJ;AACI,aAAON,YAAP;AATR;AAWH,CAZD;;AAeA,OAAO,MAAMO,SAAS,GAAID,OAAD,KAAc;AAACF,EAAAA,IAAI,EAAEL,QAAP;AAAiBO,EAAAA;AAAjB,CAAd,CAAlB;AAEP,OAAO,MAAME,eAAe,GAAIC,IAAD,IAAU;AACrC,SAAQC,QAAD,IAAa;AAChB;AACAb,IAAAA,OAAO,CAACW,eAAR,CAAwBC,IAAxB,EAA8BE,IAA9B,CACIC,IAAI,IAAI;AACJ;AACA;AACA;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAL,CAAUC,SAAV,CAAoBJ,IAApB,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAPL;AAUH,GAZD;AAYE,CAbC;AAkBP,eAAeb,YAAf","sourcesContent":["import {postAPI} from \"../api/api\";\r\n\r\n\r\nconst SET_TEST = 'SET_TEST'\r\nconst SET_DATA = 'SET_DATA'\r\n\r\nconst defaultState = {\r\n    // currentUser: 'Guest',\r\n    // searchStr: '',\r\n    // pagination: {\r\n    //     pageSize: 5,\r\n    //     totalUsersCount: 0,\r\n    //     currentPage: 1\r\n    // },\r\n    // cardData: [\r\n    //     {\r\n    //         title: 'MyDream',\r\n    //         author: 'Jeremy',\r\n    //         voteNumber: 10,\r\n    //         timeStamp: new Date(),\r\n    //         image: '/todo/',\r\n    //         isOpen:false,\r\n    //         comments: [\r\n    //             {\r\n    //                 text: 'Spasibo',\r\n    //                 voteNumber: 4,\r\n    //                 timeStamp: new Date()\r\n    //             },\r\n    //             {\r\n    //                 text: 'Spasibo',\r\n    //                 voteNumber: 4,\r\n    //                 timeStamp: new Date()\r\n    //             },\r\n    //             {\r\n    //                 text: 'Spasibo',\r\n    //                 voteNumber: 4,\r\n    //                 timeStamp: new Date()\r\n    //             }\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         title: 'Tetris',\r\n    //         author: 'Galya',\r\n    //         voteNumber: 15,\r\n    //         timeStamp: new Date(),\r\n    //         image: '/todo/',\r\n    //         isOpen: false,\r\n    //         comments: [\r\n    //             {\r\n    //                 text: 'Ura, Thank You',\r\n    //                 voteNumber: 5,\r\n    //                 timeStamp: new Date()\r\n    //             },\r\n    //             {\r\n    //                 text: 'Please write me on email mbutuzov@gmail.com',\r\n    //                 voteNumber: 4,\r\n    //                 timeStamp: new Date()\r\n    //             },\r\n    //             {\r\n    //                 text: 'I am too',\r\n    //                 voteNumber: 4,\r\n    //                 timeStamp: new Date()\r\n    //             }\r\n    //         ]\r\n    //     }\r\n    // ]\r\n\r\n}\r\n\r\n\r\nconst storeReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case SET_DATA:\r\n            return {\r\n\r\n            }\r\n        case SET_TEST:\r\n            return {...state, currentUser: action.payload}\r\n\r\n        default:\r\n            return defaultState\r\n    }\r\n}\r\n\r\n\r\nexport const setTestAC = (payload) => ({type: SET_DATA, payload})\r\n\r\nexport const getPostsByPages = (page) => {\r\n    return (dispatch) =>{\r\n        // dispatch(toggleIsFetching(true));\r\n        postAPI.getPostsByPages(page).then(\r\n            data => {\r\n                // dispatch(toggleIsFetching(false));\r\n                // dispatch(setUsers(data.items));\r\n                // dispatch(setTotalUsersCount(data.totalCount));\r\n                console.log(data.JSON.stringify(data))\r\n                console.log('getUsers DONE');\r\n            }\r\n        );\r\n\r\n    }}\r\n\r\n\r\n\r\n\r\nexport default storeReducer;"]},"metadata":{},"sourceType":"module"}