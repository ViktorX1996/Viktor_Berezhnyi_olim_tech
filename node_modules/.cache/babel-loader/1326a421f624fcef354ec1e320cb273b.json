{"ast":null,"code":"import * as axios from \"axios\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:8080/'\n});\nexport const postAPI = {\n  getPostsByPages() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    return instance.get(`/post/page/${page}`).then(response => response.data);\n  },\n\n  createPost(title, username) {\n    return instance.post(`/post/`, {\n      title,\n      username\n    }).then(response => response.data);\n  },\n\n  deletePost(id) {\n    console.log(id, \"POST DELETED API JS\");\n    return instance.delete(`/post/${id}`).then(response => response.data);\n  },\n\n  deleteComment(id) {\n    console.log(id, \"comment DELETED API JS\");\n    return instance.delete(`/comment/${id}`).then(response => response.data);\n  },\n\n  editPost(id, title) {\n    console.warn(id, title);\n    return instance.put(`/post/${id}`, {\n      title\n    }).then(response => response.data);\n  },\n\n  addPostLike(id, likes) {\n    console.log('api.js liked post', id, likes);\n    return instance.put(`/post/${id}`, {\n      likes\n    }).then(response => response.data);\n  },\n\n  addPostDislike(id, dislikes) {\n    console.log('api.js dislike post', id, dislikes);\n    return instance.put(`/post/${id}`, {\n      dislikes\n    }).then(response => response.data);\n  },\n\n  createComment(text, postId, username) {\n    return instance.post(`/comment/`, {\n      text,\n      postId,\n      username\n    }).then(response => response.data);\n  },\n\n  addCommentLike(id, likes) {\n    console.log('api.js liked comment', id, likes);\n    return instance.put(`/comment/${id}`, {\n      likes\n    }).then(response => response.data);\n  },\n\n  addCommentDislike(id, dislikes) {\n    console.log('api.js disliked comment', id, dislikes);\n    return instance.put(`/comment/${id}`, {\n      dislikes\n    }).then(response => response.data);\n  },\n\n  editComment(id, text) {\n    return instance.put(`/comment/${id}`, {\n      text\n    }).then(response => response.data);\n  }\n\n}; // export const profileAPI = {\n//     getProfile(userId){\n//         return instance.get(profile/ + userId)\n//     }\n// }","map":{"version":3,"sources":["C:/diskDlyaHlama/olim_tech_practice/testTuskRedux/react-practical-assignment-main/client/src/api/api.js"],"names":["axios","instance","create","baseURL","postAPI","getPostsByPages","page","get","then","response","data","createPost","title","username","post","deletePost","id","console","log","delete","deleteComment","editPost","warn","put","addPostLike","likes","addPostDislike","dislikes","createComment","text","postId","addCommentLike","addCommentDislike","editComment"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CACb;AACIC,EAAAA,OAAO,EAAE;AADb,CADa,CAAjB;AAKA,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,eAAe,GAAW;AAAA,QAAVC,IAAU,uEAAH,CAAG;AACtB,WAAOL,QAAQ,CAACM,GAAT,CAAc,cAAaD,IAAK,EAAhC,EACFE,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GAJkB;;AAKnBC,EAAAA,UAAU,CAACC,KAAD,EAAOC,QAAP,EAAiB;AACvB,WAAOZ,QAAQ,CAACa,IAAT,CAAe,QAAf,EAAuB;AAACF,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAvB,EACFL,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GARkB;;AASnBK,EAAAA,UAAU,CAACC,EAAD,EAAK;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAAgB,qBAAhB;AACA,WAAOf,QAAQ,CAACkB,MAAT,CAAiB,SAAQH,EAAG,EAA5B,EACFR,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GAbkB;;AAcnBU,EAAAA,aAAa,CAACJ,EAAD,EAAK;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ,EAAgB,wBAAhB;AACA,WAAOf,QAAQ,CAACkB,MAAT,CAAiB,YAAWH,EAAG,EAA/B,EACFR,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GAlBkB;;AAmBnBW,EAAAA,QAAQ,CAACL,EAAD,EAAIJ,KAAJ,EAAU;AACdK,IAAAA,OAAO,CAACK,IAAR,CAAaN,EAAb,EAAgBJ,KAAhB;AACA,WAAOX,QAAQ,CAACsB,GAAT,CAAc,SAAQP,EAAG,EAAzB,EAA2B;AAACJ,MAAAA;AAAD,KAA3B,EACFJ,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GAvBkB;;AAwBnBc,EAAAA,WAAW,CAACR,EAAD,EAAIS,KAAJ,EAAU;AACjBR,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCF,EAAhC,EAAmCS,KAAnC;AACA,WAAOxB,QAAQ,CAACsB,GAAT,CAAc,SAAQP,EAAG,EAAzB,EAA2B;AAACS,MAAAA;AAAD,KAA3B,EACNjB,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAEH,GA5BkB;;AA6BnBgB,EAAAA,cAAc,CAACV,EAAD,EAAIW,QAAJ,EAAa;AACvBV,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAkCF,EAAlC,EAAqCW,QAArC;AACA,WAAO1B,QAAQ,CAACsB,GAAT,CAAc,SAAQP,EAAG,EAAzB,EAA2B;AAACW,MAAAA;AAAD,KAA3B,EACNnB,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAEH,GAjCkB;;AAkCnBkB,EAAAA,aAAa,CAACC,IAAD,EAAMC,MAAN,EAAajB,QAAb,EAAuB;AAChC,WAAOZ,QAAQ,CAACa,IAAT,CAAe,WAAf,EAA0B;AAACe,MAAAA,IAAD;AAAMC,MAAAA,MAAN;AAAajB,MAAAA;AAAb,KAA1B,EACFL,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IADxB,CAAP;AAEH,GArCkB;;AAsCnBqB,EAAAA,cAAc,CAACf,EAAD,EAAIS,KAAJ,EAAU;AACpBR,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCF,EAAnC,EAAsCS,KAAtC;AACA,WAAOxB,QAAQ,CAACsB,GAAT,CAAc,YAAWP,EAAG,EAA5B,EAA8B;AAACS,MAAAA;AAAD,KAA9B,EACNjB,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAEH,GA1CkB;;AA2CnBsB,EAAAA,iBAAiB,CAAChB,EAAD,EAAIW,QAAJ,EAAa;AAC1BV,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCF,EAAtC,EAAyCW,QAAzC;AACA,WAAO1B,QAAQ,CAACsB,GAAT,CAAc,YAAWP,EAAG,EAA5B,EAA8B;AAACW,MAAAA;AAAD,KAA9B,EACNnB,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAEH,GA/CkB;;AAgDnBuB,EAAAA,WAAW,CAACjB,EAAD,EAAIa,IAAJ,EAAS;AAChB,WAAO5B,QAAQ,CAACsB,GAAT,CAAc,YAAWP,EAAG,EAA5B,EAA8B;AAACa,MAAAA;AAAD,KAA9B,EACNrB,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IADpB,CAAP;AAEH;;AAnDkB,CAAhB,C,CAsDP;AACA;AACA;AACA;AACA","sourcesContent":["import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create(\r\n    {\r\n        baseURL: 'http://localhost:8080/',\r\n    });\r\n\r\nexport const postAPI = {\r\n    getPostsByPages(page = 1) {\r\n        return instance.get(`/post/page/${page}`)\r\n            .then(response => response.data)\r\n    },\r\n    createPost(title,username) {\r\n        return instance.post(`/post/`,{title,username})\r\n            .then(response => response.data)\r\n    },\r\n    deletePost(id) {\r\n        console.log(id, \"POST DELETED API JS\");\r\n        return instance.delete(`/post/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    deleteComment(id) {\r\n        console.log(id, \"comment DELETED API JS\");\r\n        return instance.delete(`/comment/${id}`)\r\n            .then(response => response.data)\r\n    },\r\n    editPost(id,title){\r\n        console.warn(id,title);\r\n        return instance.put(`/post/${id}`,{title})\r\n            .then(response => response.data)\r\n    },\r\n    addPostLike(id,likes){\r\n        console.log('api.js liked post',id,likes);\r\n        return instance.put(`/post/${id}`,{likes})\r\n        .then(response => response.data)\r\n    },\r\n    addPostDislike(id,dislikes){\r\n        console.log('api.js dislike post',id,dislikes);\r\n        return instance.put(`/post/${id}`,{dislikes})\r\n        .then(response => response.data)\r\n    },\r\n    createComment(text,postId,username) {\r\n        return instance.post(`/comment/`,{text,postId,username})\r\n            .then(response => response.data)\r\n    },\r\n    addCommentLike(id,likes){\r\n        console.log('api.js liked comment',id,likes);\r\n        return instance.put(`/comment/${id}`,{likes})\r\n        .then(response => response.data)\r\n    },\r\n    addCommentDislike(id,dislikes){\r\n        console.log('api.js disliked comment',id,dislikes);\r\n        return instance.put(`/comment/${id}`,{dislikes})\r\n        .then(response => response.data)\r\n    },\r\n    editComment(id,text){\r\n        return instance.put(`/comment/${id}`,{text})\r\n        .then(response => response.data)\r\n    },\r\n}\r\n\r\n// export const profileAPI = {\r\n//     getProfile(userId){\r\n//         return instance.get(profile/ + userId)\r\n//     }\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}