{"ast":null,"code":"var _jsxFileName = \"C:\\\\diskDlyaHlama\\\\olim_tech_practice\\\\testTuskRedux\\\\react-practical-assignment-main\\\\client\\\\src\\\\Components\\\\AddPostModal\\\\AddPostModal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./addPostModal.css\";\nimport { LoginContext } from \"../LoginWindow/LoginContext\"; // import { useNavigate } from \"react-router-dom\";\n\nimport { useDispatch } from \"react-redux\";\nimport { createPost } from \"../../Redux/storeReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddPostModal(props) {\n  _s();\n\n  // eslint-disable-next-line no-unused-vars\n  const [context, setContext] = useContext(LoginContext);\n  const [error, setError] = useState(\"\");\n  const textRef = useRef(null);\n  const dispatch = useDispatch();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setError(\"\"); // clear error\n\n    const addPost = textRef.current.value; //getting text from input\n\n    if (addPost.length <= 6) {\n      return setError(\"Text should be more than 6 letters\");\n    }\n\n    dispatch(createPost(textRef.current.value, context));\n    props.setShowAddPostModal(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blur sign-form-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"sign-form\",\n      className: \"sign-form p-3 text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex  text-center  justify-content-center align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"w-100 text-center \",\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btnClose\",\n            onClick: () => {\n              props.setShowAddPostModal(false);\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"p-1\",\n        onSubmit: handleSubmit,\n        children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"exampleInputEmail1\",\n            className: \"form-label\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"exampleFormControlTextarea1\",\n            rows: \"2\",\n            type: \"submit\",\n            ref: textRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [!context && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Guest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 26\n          }, this), context && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You logged as: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-success\",\n              children: context\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          role: \"group\",\n          \"aria-label\": \"Basic mixed styles example\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            // type=\"submit\"\n            className: \"btn btn-primary\" // onClick={() => {\n            //   dispatch(createPost(textRef.current.value, context));\n            //   handleSubmit();\n            //   console.log(textRef.current.value, context);\n            // }}\n            // onSubmit={() => {\n            //   dispatch(createPost(textRef.current.value, context));\n            // }}\n            ,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-warning\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddPostModal, \"g9V+Lczndhyu2trL5bxcWTsDOPI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddPostModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostModal\");","map":{"version":3,"sources":["C:/diskDlyaHlama/olim_tech_practice/testTuskRedux/react-practical-assignment-main/client/src/Components/AddPostModal/AddPostModal.jsx"],"names":["React","useContext","useRef","useState","LoginContext","useDispatch","createPost","AddPostModal","props","context","setContext","error","setError","textRef","dispatch","handleSubmit","e","preventDefault","addPost","current","value","length","setShowAddPostModal"],"mappings":"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","sourcesContent":["import React, { useContext, useRef, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./addPostModal.css\";\r\nimport { LoginContext } from \"../LoginWindow/LoginContext\";\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createPost } from \"../../Redux/storeReducer\";\r\n\r\nexport default function AddPostModal(props) {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [context, setContext] = useContext(LoginContext);\r\n  const [error, setError] = useState(\"\");\r\n  const textRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setError(\"\"); // clear error\r\n    const addPost = textRef.current.value; //getting text from input\r\n    if (addPost.length <= 6) {\r\n      return setError(\"Text should be more than 6 letters\");\r\n    }\r\n    dispatch(createPost(textRef.current.value, context))\r\n    props.setShowAddPostModal(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"blur sign-form-overlay\"></div>\r\n      <div id=\"sign-form\" className=\"sign-form p-3 text-center\">\r\n        <div className=\"d-flex  text-center  justify-content-center align-items-center\">\r\n          <h2 className=\"w-100 text-center \">Add Post</h2>\r\n          <div className=\"\">\r\n            <button\r\n              className=\"btnClose\"\r\n              onClick={() => {\r\n                props.setShowAddPostModal(false);\r\n              }}\r\n            >\r\n              X\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <form className=\"p-1\"\r\n        onSubmit={handleSubmit}\r\n        >\r\n          {error && <p className=\"text-danger\">{error}</p>}\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">\r\n              Title\r\n            </label>\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              rows=\"2\"\r\n              type=\"submit\"\r\n              ref={textRef}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            {!context && <p>Guest</p>}\r\n            {context && (\r\n              <p>\r\n                You logged as: <span className=\"text-success\">{context}</span>\r\n              </p>\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"btn-group\"\r\n            role=\"group\"\r\n            aria-label=\"Basic mixed styles example\"\r\n          >\r\n            <button\r\n              // type=\"submit\"\r\n              className=\"btn btn-primary\"\r\n              // onClick={() => {\r\n              //   dispatch(createPost(textRef.current.value, context));\r\n              //   handleSubmit();\r\n              //   console.log(textRef.current.value, context);\r\n              // }}\r\n              // onSubmit={() => {\r\n              //   dispatch(createPost(textRef.current.value, context));\r\n              // }}\r\n            >\r\n              Add\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-warning\">\r\n              Edit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}